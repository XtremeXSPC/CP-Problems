# Based on LLVM style with customizations
BasedOnStyle: LLVM

# Keep the * operator close to the type
PointerAlignment: Left

# Limit for the length of each line
ColumnLimit: 140

# Indentation size (2 spaces for consistency with C/C++)
IndentWidth: 2

# Use spaces instead of tabs
UseTab: Never

# Force template declaration on a new line
AlwaysBreakTemplateDeclarations: Yes

# Function argument formatting
AlignAfterOpenBracket: AlwaysBreak
AllowShortFunctionsOnASingleLine: InlineOnly
BreakBeforeBraces: Custom
BraceWrapping:
  AfterClass: false
  AfterControlStatement: false
  AfterEnum: false
  AfterFunction: false
  AfterNamespace: false
  BeforeElse: false
  IndentBraces: false

# Prefer includes to be sorted
SortIncludes: true

# Align parameters to improve readability
AlignConsecutiveDeclarations: true
AlignConsecutiveAssignments: true
AlignTrailingComments: true

# Spacing
SpaceBeforeParens: ControlStatements
SpacesInParentheses: false
SpacesInSquareBrackets: false
SpacesInAngles: false

# Configure struct and class handling
AlwaysBreakAfterReturnType: None
AllowShortBlocksOnASingleLine: false
BinPackParameters: false

# Configure handling of operators and parameters
BreakBeforeBinaryOperators: NonAssignment
BreakConstructorInitializers: AfterColon

# Macro names always in uppercase
MacroBlockBegin: AlwaysBreak
MacroBlockEnd: AlwaysBreak
