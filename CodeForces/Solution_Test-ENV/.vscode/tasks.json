{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Build (Debug)",
      "type": "shell",
      "command": "make",
      "args": ["BUILD_TYPE=debug"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "silent",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
      },
      "problemMatcher": ["$gcc"],
      "detail": "Build with debug information using Makefile"
    },
    {
      "label": "Build (Contest)",
      "type": "shell",
      "command": "make",
      "args": ["contest"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "silent",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
      },
      "problemMatcher": ["$gcc"],
      "detail": "Build optimized version for contest submission"
    },
    {
      "label": "Build (Release)",
      "type": "shell",
      "command": "make",
      "args": ["BUILD_TYPE=release"],
      "problemMatcher": ["$gcc"],
      "group": "build",
      "detail": "Build the project for release."
    },
    {
      "label": "Run with Input",
      "type": "shell",
      "command": "make",
      "args": ["run"],
      "group": "test",
      "dependsOn": "Build (Debug)",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      },
      "detail": "Build and run with input.txt (if exists)"
    },
    {
      "label": "Test (Input â†’ Output)",
      "type": "shell",
      "command": "make",
      "args": ["test"],
      "group": "test",
      "dependsOn": "Build (Debug)",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      },
      "detail": "Run with input.txt and save to output.txt"
    },
    {
      "label": "Debug Info",
      "type": "shell",
      "command": "make",
      "args": ["debug-info"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      },
      "detail": "Show detailed build configuration information"
    },
    {
      "label": "LLDB Debug (macOS)",
      "type": "shell",
      "command": "/opt/homebrew/opt/llvm/bin/lldb",
      "args": ["${workspaceFolder}/bin/Tester"],
      "dependsOn": ["Build (Debug)"],
      "presentation": {
        "reveal": "always",
        "panel": "new",
        "focus": true
      },
      "group": "test",
      "detail": "Debug with LLDB in an embedded terminal."
    },
    {
      "label": "Run Static Analysis (clang-tidy)",
      "type": "shell",
      "command": "make",
      "args": ["analyze"],
      "problemMatcher": [],
      "group": "test",
      "detail": "Run clang-tidy for static analysis."
    },
    {
      "label": "Generate Compilation Database",
      "type": "shell",
      "command": "make",
      "args": ["compile_commands"],
      "problemMatcher": [],
      "detail": "Generate compile_commands.json for clangd."
    },
    {
      "label": "Clean Build",
      "type": "shell",
      "command": "make",
      "args": ["clean"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "silent",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
      },
      "detail": "Clean build artifacts"
    },
    {
      "label": "Configure IDE",
      "type": "shell",
      "command": "make",
      "args": ["config-ide"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      },
      "detail": "Configure IDE integration for current platform"
    },
    {
      "label": "Memory Check (Sanitize)",
      "type": "shell",
      "command": "make",
      "args": ["BUILD_TYPE=sanitize", "run"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": ["$gcc"],
      "detail": "Build with AddressSanitizer and run for memory debugging"
    },
    {
      "label": "Quick Contest Build & Run",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "make contest && echo '=== Running optimized version ===' && make run BUILD_TYPE=release"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": ["$gcc"],
      "detail": "Quick optimized build and test for contests"
    }
  ]
}
